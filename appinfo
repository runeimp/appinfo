#!/usr/bin/env bash
###################
# appinfo
#
#####
# ChangeLog
# ---------
# 2016-12-10  1.0.0      Initial script creation
#


#
# APP DATA
#
declare -r APP_NAME='AppInfo'
declare -r APP_VERSION='1.0.0'
declare -r APP_LABEL="$APP_NAME v$APP_VERSION"
declare -r CLI_NAME='appinfo'


#
# CONSTANTS
#

declare -r VERSION_REGEX='.*(^| | v|version )(([0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+|\([0-9]+\))?)(-(release|develop|prerelease|pre|patch))?).*$'


#
# VARIABLES
#
declare -i exit_code
declare -i file_size
declare -i hard_link

app_label=''
app_ver=''
file_type=''
link_data=''
real_path=''


#
# FUNCTIONS
#
get_app_label()
{
	head_line="${1:-1}"
	# echo "head_line: $head_line"
	app_label=$($app_path --version 2> /dev/null | head "-$head_line" | xargs)
	exit_code=$?
	if [[ $exit_code -gt 0 ]]; then
		app_label=$($app_path -v 2> /dev/null | head "-$head_line" | xargs)
		exit_code=$?
		if [[ $exit_code -gt 0 ]]; then
			app_label=$($app_path -V 2> /dev/null | head "-$head_line" | xargs)
			exit_code=$?
			if [[ $exit_code -gt 0 ]]; then
				app_label='unknown'
			fi
		fi
	fi
}

get_file_size()
{
	local -i file_size
	local file_path="$1"
	local file_type=$(stat -f '%HT' "$file_path")
	local dir_path=$(dirname "$file_path")

	file_size=$(stat -f%z "$file_path")
	# echo "get_file_size() | file_size: $file_size" 1>&2
	echo $file_size
}

get_real_path()
{
	local -i file_size
	local file_path="$1"
	local file_type=$(stat -f '%HT' "$file_path")
	local dir_path=$(dirname "$file_path")
	local real_path="$file_path"

	while [[ "$file_type" = 'Symbolic Link' ]]; do
		real_path=$(stat -f '%Y' "$real_path")
		cd "$dir_path"
		real_path=$(realpath "${real_path}")
		dir_path=$(dirname "$real_path")
		file_type=$(stat -f '%HT' "$real_path")
	done
	# echo "get_real_path() | file_path: $file_path" 1>&2
	# echo "get_real_path() | dir_path: $dir_path" 1>&2
	# echo "get_real_path() | real_path: $real_path" 1>&2
	echo "$real_path"
}

trim() {
	local var="$*"
	var="${var#"${var%%[![:space:]]*}"}"   # remove leading whitespace characters
	var="${var%"${var##*[![:space:]]}"}"   # remove trailing whitespace characters
	echo -n "$var"
}


#
# MAIN
#
if [[ $# -eq 0 ]]; then
	echo "$APP_LABEL"
	echo
	echo "Please specify the app name to get info for."
	echo
else
	echo
	for app_path in $(which -a $1); do
		get_app_label
		if [[ "$app_label" = '' ]]; then
			get_app_label 2
		fi

		# app_label='1.2.3(4)-release (x86_64-apple-darwin15.6.0)'

		if [[ "$app_label" =~ $VERSION_REGEX ]]; then
			# echo "\${BASH_REMATCH[*]}: ${BASH_REMATCH[*]}"
			# [[ -n "${BASH_REMATCH[0]}" ]] && echo "\${BASH_REMATCH[0]}: '${BASH_REMATCH[0]}'"
			# [[ -n "${BASH_REMATCH[1]}" ]] && echo "\${BASH_REMATCH[1]}: '${BASH_REMATCH[1]}'"
			# [[ -n "${BASH_REMATCH[2]}" ]] && echo "\${BASH_REMATCH[2]}: '${BASH_REMATCH[2]}'"
			# [[ -n "${BASH_REMATCH[3]}" ]] && echo "\${BASH_REMATCH[3]}: '${BASH_REMATCH[3]}'"
			# [[ -n "${BASH_REMATCH[4]}" ]] && echo "\${BASH_REMATCH[4]}: '${BASH_REMATCH[4]}'"
			# [[ -n "${BASH_REMATCH[5]}" ]] && echo "\${BASH_REMATCH[5]}: '${BASH_REMATCH[5]}'"
			# [[ -n "${BASH_REMATCH[6]}" ]] && echo "\${BASH_REMATCH[6]}: '${BASH_REMATCH[6]}'"
			# [[ -n "${BASH_REMATCH[7]}" ]] && echo "\${BASH_REMATCH[7]}: '${BASH_REMATCH[7]}'"
			# [[ -n "${BASH_REMATCH[8]}" ]] && echo "\${BASH_REMATCH[8]}: '${BASH_REMATCH[8]}'"
			app_ver="${BASH_REMATCH[2]}"
		else
			app_ver=$(echo "$app_label" | rev | cut -d' ' -f1 | rev)
		fi

		file_type=$(stat -f '%HT' "$app_path")
		hard_link=$(stat -f '%l' "$app_path")
		if [[ "$file_type" = 'Symbolic Link' ]]; then
			file_type='symlink:     '
			link_data=$(get_real_path "$app_path")
			file_size=$(get_file_size "$link_data")
			# link_data=$(stat -f '%Y' "$app_path")
		else
			if [[ "$file_type" = 'Regular File' ]]; then
				file_type=''
			else
				file_type="${file_type}: "
			fi
			if [[ $hard_link -gt 1 ]]; then
				link_data="$hard_link hardlink copies"
			else
				link_data=''
			fi
			file_size=$(get_file_size "$app_path")
		fi

		echo "  App Path:    $app_path"
		echo "  App Label:   $app_label"
		echo "  App Version: $app_ver"
		if [[ $file_size -gt 1023 ]]; then
			echo "  App Size:    $(byteit $file_size) or $file_size Bytes"
		else
			echo "  App Size:    $file_size Bytes"
		fi
		if [[ "x${link_data}x" != 'xx' ]]; then
			echo "  ${file_type}$link_data"
		fi
		echo
	done
fi

